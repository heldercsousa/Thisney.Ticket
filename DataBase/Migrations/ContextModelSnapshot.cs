// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thisney.Ticket.Database.Context;

namespace DataBase.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Thisney.Ticket.Domain.CostumerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Costumer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "70535892187",
                            Name = "Helder Carvalho de Sousa"
                        },
                        new
                        {
                            Id = 2,
                            CPF = "01234567890",
                            Name = "Glauber Carvalho de Sousa"
                        });
                });

            modelBuilder.Entity("Thisney.Ticket.Domain.EventEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaxPeopleCapacity");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxPeopleCapacity = 35,
                            Title = "Megashow Pink Floyd"
                        },
                        new
                        {
                            Id = 2,
                            MaxPeopleCapacity = 3,
                            Title = "Circo du Solei"
                        },
                        new
                        {
                            Id = 3,
                            MaxPeopleCapacity = 9,
                            Title = "Show Sandy Junior"
                        },
                        new
                        {
                            Id = 4,
                            MaxPeopleCapacity = 10,
                            Title = "Show Jorge Mateus"
                        },
                        new
                        {
                            Id = 5,
                            MaxPeopleCapacity = 8,
                            Title = "Show Capital Inicial"
                        },
                        new
                        {
                            Id = 6,
                            MaxPeopleCapacity = 6,
                            Title = "Show Paralamas Sucesso"
                        },
                        new
                        {
                            Id = 7,
                            MaxPeopleCapacity = 7,
                            Title = "Show Carlinhos Brown"
                        },
                        new
                        {
                            Id = 8,
                            MaxPeopleCapacity = 30,
                            Title = "Megashow Madonna"
                        },
                        new
                        {
                            Id = 9,
                            MaxPeopleCapacity = 11,
                            Title = "Turnê Chitãozinho e Xororó"
                        },
                        new
                        {
                            Id = 10,
                            MaxPeopleCapacity = 5,
                            Title = "Harmozia do Samba"
                        });
                });

            modelBuilder.Entity("Thisney.Ticket.Domain.TicketEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CostumerId");

                    b.Property<int>("EventId");

                    b.Property<DateTime?>("SaleDate");

                    b.Property<DateTime>("ShippingDate");

                    b.HasKey("Id");

                    b.HasIndex("CostumerId");

                    b.HasIndex("EventId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("Thisney.Ticket.Domain.TicketEntity", b =>
                {
                    b.HasOne("Thisney.Ticket.Domain.CostumerEntity", "Costumer")
                        .WithMany("Ticket")
                        .HasForeignKey("CostumerId");

                    b.HasOne("Thisney.Ticket.Domain.EventEntity", "Event")
                        .WithMany("Ticket")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
